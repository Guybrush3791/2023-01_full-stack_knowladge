{
	"nodes":[
		{"id":"10f36c591f784a33","x":-737,"y":-527,"width":654,"height":715,"type":"text","text":"# Generazione dati fake\nDefinire un file `faker.php` utile alla generazione del file `todo.json` con dei dati iniziali che utilizzeremo per testare la **SCRITTURA** di dati su file in formato `JSON` e l'utilizzo di quel file come base dati **PERSISTENTE**\n\n### BE: `faker.php`\n```php\n<?php\n\n    $todoList = [\n        [\n            \"text\" => \"todo 1\",\n            \"completed\" => true\n        ],\n        [\n            \"text\" => \"todo 2\",\n            \"completed\" => true\n        ],\n        [\n            \"text\" => \"todo 3\",\n            \"completed\" => false\n        ],\n        [\n            \"text\" => \"todo 4\",\n            \"completed\" => false\n        ]\n    ];\n\n    $jsonTodoList = json_encode($todoList);\n    file_put_contents(\"todo.json\", $jsonTodoList);\n```"},
		{"id":"3f9aa640894e1db9","x":-775,"y":-574,"width":1692,"height":802,"type":"group","label":"Fase 1"},
		{"id":"4e29080e32005df5","x":-737,"y":324,"width":654,"height":1263,"type":"text","text":"# Collegamento FE<-->Be\nE' necessario creare come prima cosa un nuovo progetto `Vue.JS` e impostare il componente per la comunicazione con il `back-end`\n\n### FE: `TodoList.vue`\n\n```js\n<template>\n  <div class=\"hello\">\n    <h1>Hello World</h1>\n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\n\nconst API_URL = \"http://localhost/\";\n\nexport default {\n  name: 'TodoList',\n  data() {\n\n    return {\n\n      todoList: [],\n      newTodoText: \"\"\n    };\n  },\n  methods: {\n\n    getAllData() {\n      \n      axios.get(API_URL + \"api.php\")\n           .then(res => {\n\n            const data = res.data;\n\n            console.log(data);\n           });\n    },\n    \n  },\n  mounted() {\n    \n    this.getAllData();\n  }\n}\n</script>\n\n<style scoped></style>\n```\n\n### BE: `api.php`\n```php\n<?php\n\n    header(\"Access-Control-Allow-Origin: http://localhost:8080\");\n    header(\"Access-Control-Allow-Headers: X-Requested-With\");\n\n    header('Content-Type: application/json');\n\n    $jsonTodoList = file_get_contents(\"todo.json\");\n    echo $jsonTodoList;\n```"},
		{"id":"6e37cdf918420076","x":372,"y":-405,"width":511,"height":471,"type":"text","text":"## Risultato\nIl file `JSON` risultante conterra' gli stessi dati presenti nell'`array` in `PHP` convertiti in formato `JSON`\n\n### BE: `todo.json`\n```json\n[{\n    \"text\": \"todo 1\",\n    \"completed\": true\n}, {\n    \"text\": \"todo 2\",\n    \"completed\": true\n}, {\n    \"text\": \"todo 3\",\n    \"completed\": false\n}, {\n    \"text\": \"todo 4\",\n    \"completed\": false\n}]\n```"},
		{"id":"3358b662361ec9a1","x":-775,"y":286,"width":1692,"height":2029,"type":"group","label":"Fase 2"},
		{"id":"f91abf2ca0a645b7","x":372,"y":700,"width":511,"height":511,"type":"text","text":"## Risultato\nSe il processo ha avuto buon fine, apparira' in `console.log` il contenuto del file `todo.json`\n```js\n[\n    {\n        \"text\": \"todo 1\",\n        \"completed\": true\n    },\n    {\n        \"text\": \"todo 2\",\n        \"completed\": true\n    },\n    {\n        \"text\": \"todo 3\",\n        \"completed\": false\n    },\n    {\n        \"text\": \"todo 4\",\n        \"completed\": false\n    }\n]\n```"},
		{"id":"70380f9d70c6e51e","x":-737,"y":1650,"width":654,"height":623,"type":"text","text":"# Completamento Vue.js\nUna volta testato l'avvenuto collegamento sara' sufficiente salvare il risultato dell'`api` dentro ad un `data` di `Vue`, e utilizzarlo per la rappresentazione dei dati in `HTML`\n\n### FE: `TodoList.vue`\n```js\n// ...\n<ul>\n  <li\n\tv-for=\"(todoElem, ind) in todoList\"\n\t:key=\"ind\"\n>\n\t{{ todoElem.text }}\n  </li>\n</ul>\n// ...\ngetAllData() {\n      \n  axios.get(API_URL + \"api.php\")\n\t   .then(res => {\n\n\t\tconst data = res.data;\n\n\t\tthis.todoList = data;\n\t   });\n},\n// ...\n```"},
		{"id":"502bc609aea4942d","x":372,"y":1809,"width":511,"height":306,"type":"text","text":"## Risultato\nDa questo otterremmo la prima visualizzazione grafica dei nostri elementi presenti nel file `todo.json`\n![[Pasted image 20230113114749.png]]\n"},
		{"id":"696e5a917536e8e2","x":-778,"y":2437,"width":1695,"height":1262,"type":"group","label":"Fase 3"},
		{"id":"d91d50552c762c7b","x":-737,"y":2478,"width":654,"height":1171,"type":"text","text":"# Invio dati da FE a BE\nE' ora possibile attraverso un *form* e un *input*, dare ora la possibilita' all'utente di aggiungere nuovi elementi alla lista\n\n### FE: `TodoList.vue`\n\n```js\n...\n<form @submit=\"createNewTask\">\n  <input type=\"text\" name=\"text\" v-model=\"newTodoText\">\n  <input type=\"submit\" value=\"CREATE NEW TASK\">\n</form>\n...\ncreateNewTask(e) {\n\n  e.preventDefault();\n\n  const newTodoText = this.newTodoText;\n\n  const params = { params: {\n\t\"text\": newTodoText\n  }};\n\n  axios.get(API_URL + \"api_create_new_task.php\", params)\n\t   .then(() => {\n\n\t\tthis.newTodoText = \"\";\n\t\tthis.getAllData();\n\t   });\n}\n...\n```\n\n## BE: `api_create_new_task.php`\nL'`API` corrispondente si occupera' quindi di rileggere tutto il file `todo.json`, convertirlo in oggetto `PHP`, aggiungere il nuovo *task* creato con il *testo* definito dall'*utente*, per poi riconvertire l'oggetto in `JSON` e salvarlo nel file `todo.json`\n\n```php\n<?php\n\n    header(\"Access-Control-Allow-Origin: http://localhost:8080\");\n    header(\"Access-Control-Allow-Headers: X-Requested-With\");\n\n    header('Content-Type: application/json');\n\n    $text = $_GET['text'];\n\n    $jsonTodoList = file_get_contents(\"todo.json\");\n    $todoList = json_decode($jsonTodoList);\n\n    $todoList[] = [\n        \"text\" => $text,\n        \"completed\" => false\n    ];\n\n    $jsonTodoList = json_encode($todoList);\n    file_put_contents(\"todo.json\", $jsonTodoList);\n```"},
		{"id":"06e9a5d884bc8e0d","x":372,"y":2871,"width":511,"height":386,"type":"text","text":"## Risultato\nE' ora possibile per l'*utente* creare nuovi elementi da aggiungere alla lista, che verranno salvati in maniera *persistente* nel file `todo.json`\n\n![[Pasted image 20230113115442.png]]"}
	],
	"edges":[
		{"id":"1a58236b33c88a10","fromNode":"10f36c591f784a33","fromSide":"right","toNode":"6e37cdf918420076","toSide":"left","label":"Da browser: \nhttp://localhost/faker.php"},
		{"id":"660709f36ef0e909","fromNode":"4e29080e32005df5","fromSide":"right","toNode":"f91abf2ca0a645b7","toSide":"left","label":"console.log"},
		{"id":"cd208bf6810a0f3d","fromNode":"70380f9d70c6e51e","fromSide":"right","toNode":"502bc609aea4942d","toSide":"left","label":"in browser"},
		{"id":"e3438ffeac7f9676","fromNode":"d91d50552c762c7b","fromSide":"right","toNode":"06e9a5d884bc8e0d","toSide":"left","label":"in browser"}
	]
}