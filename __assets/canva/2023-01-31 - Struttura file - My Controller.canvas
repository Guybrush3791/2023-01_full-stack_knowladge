{
	"nodes":[
		{"id":"04de6729508bd585","x":-937,"y":-498,"width":1968,"height":809,"type":"group","label":"1. Passaggi preliminari"},
		{"id":"914d5d3e6f9bead8","x":-888,"y":-444,"width":806,"height":703,"type":"file","file":"Tips&Tricks/2023-01-30 - Laravel init.md"},
		{"id":"0127878a1d037462","x":-888,"y":473,"width":806,"height":703,"type":"text","text":"## Creazione nuovo Controller\nPer prima cosa facciamo creare a *Laravel* un nuovo controller tramite il seguente *comando* `artisan`\n```sh\nphp artisan make:controller MainController\n```\nIl sistema creera' per noi un file nella cartella `app/Http/Controllers` che completeremo per farlo risultare come segue\n```php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\n\nuse App\\Models\\Degrees;\n\nclass MainController extends Controller\n{\n    public function home() {\n\n        return view('pages.home');\n    }\n}\n```"},
		{"id":"6a84d57c681db609","x":-888,"y":1207,"width":806,"height":348,"type":"text","text":"## Collegare il Controller ad una rotta\nAttraverso il file `routes/web.php` e' possibile associare le rotte con i *metodi* dei `controller` in *Laravel*\n```php\n<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\MainController;\n\nRoute::get('/', [MainController::class, 'home']);\n```"},
		{"id":"67dc37ad16e74e47","x":-937,"y":415,"width":1968,"height":1193,"type":"group","label":"2. Scaffolding back-end"},
		{"id":"64390daec3decd79","x":-888,"y":1787,"width":806,"height":1162,"type":"text","text":"## Creazione Model per la lettura del DB\nE' ora possibile definire un `model` che *Laravel* utilizzera' per la lettura/scrittura dei dati da/a *DB*. Per crearlo possiamo utilizzare un altro *comando* `artisan`\n```sh\nphp artisan make:model Degrees\n```\n\nAndiamo poi a inserire come **variabili private** tutte le colonne della tabella che vogliamo rappresentare e creaiamo le relative *proprieta'* (`getter`/`setter`)\n```php\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Degrees extends Model\n{\n    use HasFactory;\n\n    private $id;\n    private $name;\n    private $level;\n    private $address;\n    private $email;\n    private $website;\n\n    public function getId() {\n\n        return $this -> id;\n    }\n    public function setId($id) {\n\n        $this -> id = $id;\n    }\n    public function getName() {\n\n        return $this -> name;\n    }\n    public function setName($name) {\n\n        $this -> name = $name;\n    }\n    public function getLevel() {\n\n        return $this -> level;\n    }\n    public function setLevel($level) {\n\n        $this -> level = $level;\n    }\n    public function getAddress() {\n\n        return $this -> address;\n    }\n    public function setAddress($address) {\n\n        $this -> address = $address;\n    }\n    public function getEmail() {\n\n        return $this -> email;\n    }\n    public function setEmail($email) {\n\n        $this -> email = $email;\n    }\n    public function getWebsite() {\n\n        return $this -> website;\n    }\n    public function setWebsite($website) {\n\n        $this -> website = $website;\n    }\n}\n```"},
		{"id":"cc366f21c3d74f35","x":-937,"y":1729,"width":1968,"height":1288,"type":"group","label":"3. Rappresentazione dati"},
		{"id":"0766785e4ab49650","x":155,"y":473,"width":806,"height":1082,"type":"text","text":"## Creazione del front-end\nSara' ora quindi necessario creare lo `scafolding` in *Blade* con `header`, `footer`, `layout` e `home` come visto in precedenza\n![[2023-01-30 - Struttura file - Molisani.canvas]] \n\nPer il momento stampare semplicemente un `<h1>Hello, World</h1>` per testare il corretto collegamento tra i vari *componenti del sistema* nel file `view/pages/home.blade.php`\n```php\n@extends('layouts.main-layout')\n\n@section('content')\n    <h1>Hello, World!</h1>\n@endsection\n```"},
		{"id":"49da14103ebe69ae","x":155,"y":1787,"width":806,"height":499,"type":"text","text":"## Lettura dei dati nel controller\nE' ora possibile modificare il metodo del controller per leggere i dati dal *DB* e passarli alla `view` in modo che possa *rappresentare i dati* in `HTML`\n```php\npublic function home() {\n\n\n\t$degrees = Degrees::all();\n\n\t$data = [\n\n\t\t'degrees' => $degrees\n\t];\n\n\treturn view('pages.home', $data);\n}\n```"},
		{"id":"61590e73184278fb","x":155,"y":-444,"width":806,"height":703,"type":"text","text":"## Database\n### MySQL + PHPMyAdmin\nPer prima cosa e' necessario creare il nuovo *db* e importare (eventualmente) i dati da un `dump`, in questo caso usiamo questo db:\n[[2023-01-19 - db_university]]\n\n### Laravel Setting\nAndiamo poi ad aggiustare le variabili nel file `.env` del progetto *Laravel* per in accordo con il *nostro db*:\n```properties\n# [...]\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=db_university\nDB_USERNAME=root\nDB_PASSWORD=code\n\n# [...]\n```\n\n"},
		{"id":"b8a3d46734b85827","x":155,"y":2422,"width":806,"height":527,"type":"text","text":"## Rappresentazione dei dati\nE' ora finalmente possibile utilizzare `HTML` e `Blade` per la rappresentazione dei dati nel file `home.blade.php`\n```php\n@extends('layouts.main-layout')\n\n@section('content')\n    <h1>DEGREES</h1>\n    <div id=\"test\">\n        <ul>\n            @foreach ($degrees as $degree)\n                <li>{{ $degree -> name }} - {{ $degree -> level }}</li>\n            @endforeach\n        </ul>\n    </div>\n@endsection\n```"}
	],
	"edges":[
		{"id":"a3897b7c580b7f46","fromNode":"04de6729508bd585","fromSide":"bottom","toNode":"67dc37ad16e74e47","toSide":"top"},
		{"id":"d05a8e829ef6ac59","fromNode":"67dc37ad16e74e47","fromSide":"bottom","toNode":"cc366f21c3d74f35","toSide":"top"},
		{"id":"477570fb715f1a08","fromNode":"914d5d3e6f9bead8","fromSide":"right","toNode":"61590e73184278fb","toSide":"left"},
		{"id":"ffbd74b17b234527","fromNode":"0127878a1d037462","fromSide":"right","toNode":"0766785e4ab49650","toSide":"left"},
		{"id":"359bc3e0cb42e44e","fromNode":"0766785e4ab49650","fromSide":"left","toNode":"6a84d57c681db609","toSide":"right"},
		{"id":"29ef2b8ff56992da","fromNode":"64390daec3decd79","fromSide":"right","toNode":"49da14103ebe69ae","toSide":"left"},
		{"id":"4dfa0864fb43e2c3","fromNode":"49da14103ebe69ae","fromSide":"bottom","toNode":"b8a3d46734b85827","toSide":"top"}
	]
}